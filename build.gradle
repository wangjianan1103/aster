/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'WangJianan' at '15-11-2 下午3:02' with Gradle 2.7
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.7/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE")
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'

jar{
    baseName = 'aster'
    version = '0.1.0'
}

war {
    archiveName = "aster.war"
}

ext {
    springVersion = "4.3.6.RELEASE"
    springBootVersion = "1.5.1.RELEASE"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

task buildinfo {
    def buildVer = ""
    def tag = ""
    try {
        def revision = 'git rev-list --count HEAD'.execute().text.trim()
        def hash = 'git rev-parse --short HEAD'.execute().text.trim()
        buildVer = "${revision}-${hash}"
        tag = 'git describe --tags'.execute().text.trim()
    } catch (any) {
        println "warn! failed to get revision"
    }

    println buildVer
    new File("src/main/resources/properties/buildinfo.properties").withWriter { w ->
        w.write("build.module=aster\n")
        w.write("build.revision=" + buildVer + "\n")
        w.write("build.tag=" + "tag" + "\n")
        w.write("build.datetime =" + (new Date()).format("YYYY-MM-dd HH:mm:ss") + "\n")
        w.write("build.hostname=" + InetAddress.localHost.hostName)
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-freemarker")

    compile "org.springframework:spring-core:${springVersion}"
    compile "org.springframework:spring-web:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile "org.springframework:spring-aop:${springVersion}"
    compile "org.springframework:spring-orm:${springVersion}"
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-context:${springVersion}"

    compile 'commons-fileupload:commons-fileupload:1.3.1'

    compile 'org.apache.commons:commons-dbcp2:2.1'
    compile "org.mybatis:mybatis-spring:1.2.2"
    compile "org.mybatis:mybatis:3.2.8"
    compile 'mysql:mysql-connector-java:5.1.35'

    compile 'org.springframework.amqp:spring-amqp:1.4.5.RELEASE'
    compile 'org.springframework.amqp:spring-rabbit:1.4.5.RELEASE'

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat:1.2.7.RELEASE'

    ///// utility, such as json, etc. //////
    compile 'com.google.code.gson:gson:2.3.1'

    ///// logback //////
    compile "ch.qos.logback:logback-core:1.1.3"
    compile "ch.qos.logback:logback-classic:1.1.3"
    compile "com.googlecode.sli4j:sli4j-slf4j-logback:2.0"
    compile 'dom4j:dom4j:1.6'
    compile 'com.sun.xml.bind:jaxb-impl:2.0.1'

    ///// 七牛云////
    compile 'com.qiniu:qiniu-java-sdk:7.0.+'

    //// testing ////
    testCompile "junit:junit:4.12"
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test"
}